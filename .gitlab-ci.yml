stages:
  - build-backend
  - build-frontend
  - delivery

build_backend:
  stage: build-backend
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHORT_SHA
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG . -f infra/dockerfiles/Dockerfile.backend
    - docker push $IMAGE_TAG
  tags:
    - ci
  only:
    - dev

build_frontend:
  stage: build-frontend
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHORT_SHA
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG . -f infra/dockerfiles/Dockerfile.frontend
    - docker push $IMAGE_TAG
  tags:
    - ci
  only:
    - dev
  
delivery:
  stage: delivery
  variables:
    IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  script:
    - export IMAGE_TAG=$IMAGE_TAG
    - echo test
    - echo $IMAGE_TAG
    - cd /app
    - envsubst < "docker.production.template.yml" > "docker.production.yml"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker-compose -f docker-compose.yml -f docker.production.yml up -d
  tags:
    - ci
  only:
    - dev